// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.7.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

// Static analysis wrongly picks the IO variant, thus ignore this
// ignore_for_file: argument_type_not_assignable

import 'api/cashu.dart';
import 'api/nostr.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  Map<String, String> dco_decode_Map_String_String(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  CashuProof dco_decode_box_autoadd_cashu_proof(dynamic raw);

  @protected
  NostrEvent dco_decode_box_autoadd_nostr_event(dynamic raw);

  @protected
  CashuProof dco_decode_cashu_proof(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<CashuProof> dco_decode_list_cashu_proof(dynamic raw);

  @protected
  List<List<String>> dco_decode_list_list_String(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw);

  @protected
  List<TransactionInfo> dco_decode_list_transaction_info(dynamic raw);

  @protected
  NostrEvent dco_decode_nostr_event(dynamic raw);

  @protected
  NostrKeys dco_decode_nostr_keys(dynamic raw);

  @protected
  NostrKeysWithBech32 dco_decode_nostr_keys_with_bech_32(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  (String, List<CashuProof>, List<String>)
  dco_decode_record_string_list_cashu_proof_list_string(dynamic raw);

  @protected
  (String, List<String>) dco_decode_record_string_list_string(dynamic raw);

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw);

  @protected
  TransactionInfo dco_decode_transaction_info(dynamic raw);

  @protected
  BigInt dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  WalletInfo dco_decode_wallet_info(dynamic raw);

  @protected
  Map<String, String> sse_decode_Map_String_String(
    SseDeserializer deserializer,
  );

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  CashuProof sse_decode_box_autoadd_cashu_proof(SseDeserializer deserializer);

  @protected
  NostrEvent sse_decode_box_autoadd_nostr_event(SseDeserializer deserializer);

  @protected
  CashuProof sse_decode_cashu_proof(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<CashuProof> sse_decode_list_cashu_proof(SseDeserializer deserializer);

  @protected
  List<List<String>> sse_decode_list_list_String(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<(String, String)> sse_decode_list_record_string_string(
    SseDeserializer deserializer,
  );

  @protected
  List<TransactionInfo> sse_decode_list_transaction_info(
    SseDeserializer deserializer,
  );

  @protected
  NostrEvent sse_decode_nostr_event(SseDeserializer deserializer);

  @protected
  NostrKeys sse_decode_nostr_keys(SseDeserializer deserializer);

  @protected
  NostrKeysWithBech32 sse_decode_nostr_keys_with_bech_32(
    SseDeserializer deserializer,
  );

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  (String, List<CashuProof>, List<String>)
  sse_decode_record_string_list_cashu_proof_list_string(
    SseDeserializer deserializer,
  );

  @protected
  (String, List<String>) sse_decode_record_string_list_string(
    SseDeserializer deserializer,
  );

  @protected
  (String, String) sse_decode_record_string_string(
    SseDeserializer deserializer,
  );

  @protected
  TransactionInfo sse_decode_transaction_info(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  WalletInfo sse_decode_wallet_info(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  void sse_encode_Map_String_String(
    Map<String, String> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_cashu_proof(
    CashuProof self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_box_autoadd_nostr_event(
    NostrEvent self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_cashu_proof(CashuProof self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_cashu_proof(
    List<CashuProof> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_list_String(
    List<List<String>> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_prim_u_8_strict(
    Uint8List self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_record_string_string(
    List<(String, String)> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_list_transaction_info(
    List<TransactionInfo> self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_nostr_event(NostrEvent self, SseSerializer serializer);

  @protected
  void sse_encode_nostr_keys(NostrKeys self, SseSerializer serializer);

  @protected
  void sse_encode_nostr_keys_with_bech_32(
    NostrKeysWithBech32 self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_list_cashu_proof_list_string(
    (String, List<CashuProof>, List<String>) self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_record_string_list_string(
    (String, List<String>) self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_record_string_string(
    (String, String) self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_transaction_info(
    TransactionInfo self,
    SseSerializer serializer,
  );

  @protected
  void sse_encode_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_wallet_info(WalletInfo self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  RustLibWire.fromExternalLibrary(ExternalLibrary lib);
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
extension type RustLibWasmModule._(JSObject _) implements JSObject {}
